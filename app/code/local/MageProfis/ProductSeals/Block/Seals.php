<?phpclass MageProfis_ProductSeals_Block_Seals extends Mage_Core_Block_Template {    protected $_attributeGroups = array();    public function _construct()     {        $this->checkSealsDir();            }                    public function getProduct() {        return Mage::registry('current_product');    }    /**     * get nutrition attributes     * @param array $excludeAttr     * @return type     */    public function getSeals(array $excludeAttr = array()) {        $data = array();        $product = $this->getProduct();        $attributes = $product->getAttributes();        foreach ($attributes as $attribute) {            if(!$this->getAttributeGroup($attribute->getData('attribute_group_id')))            {                continue;            }            if (!in_array($attribute->getAttributeCode(), $excludeAttr)) {                $value = $attribute->getFrontend()->getValue($product);                 if($value == "Nein" || $value == "No" || $value == "")                 {                     continue;                 }                if (is_string($value)) {                    if (strlen($value) && $product->hasData($attribute->getAttributeCode())) {                        if ($attribute->getFrontendInput() == 'price') {                            $value = Mage::app()->getStore()->convertPrice($value, true);                        } elseif (!$attribute->getIsHtmlAllowedOnFront()) {                            $value = $this->escapeHtml($value);                        }                                                                               $data[$attribute->getAttributeCode()] = array(                            'label' => $attribute->getFrontend()->getLabel(),                            'value' => $value,                            'code'  =>  $attribute->getAttributeCode(),                            'image' => $this->getSealImage($attribute->getAttributeCode()),                            'alt'   => $this->getImgAlt($attribute->getFrontend()->getLabel())                        );                    }                }            }        }               return $data;    }        /**     * Get Attribute id By Name     * @param type $id     * @return type     */    public function getAttributeGroup($id)    {        if (!isset($this->_attributeGroups[$id]))        {            $this->_attributeGroups[$id] = false;            $groupModel = Mage::getModel('eav/entity_attribute_group')->load($id);            $name = trim($groupModel->getAttributeGroupName());            if ($name == 'Siegel')            {                $this->_attributeGroups[$id] = $groupModel;            }        }        return $this->_attributeGroups[$id];    }        /**     * Get icon for Seal if there is no svg file use ong instead     * @param string $_code     * @return string     */    public function getSealImage($_code)    {        $svg_url = Mage::getUrl('media' . DS . trim(Mage::getStoreConfig('productseals/general/folder'), '/')) . $_code . '.svg';        $png_url = Mage::getUrl('media' . DS . trim(Mage::getStoreConfig('productseals/general/folder'), '/')) . $_code . '.png';        $placeholder_img = Mage::getUrl('media' . DS . trim(Mage::getStoreConfig('productseals/general/folder'), '/')) . 'placeholder.svg';                if(!fopen($svg_url, 'r'))        {            if(fopen($png_url, 'r')){                return $png_url;            }            else {                return $placeholder_img;            }        }        return $svg_url;    }        /**     * get "" enclosed part of Label to use it as Image alt     * @param string $label     * @return string     */    public function getImgAlt($label)    {        preg_match ('/"(.+?)"/', $label, $matches);        return $matches[1];    }        /**     * get Url of desired seals dir and create it if it does not exist     * @return url     */    public function checkSealsDir()    {        $customDir = Mage::getBaseDir('media'). DS . trim(Mage::getStoreConfig('productseals/general/folder'), '/');        $ioFile = new Varien_Io_File();        $ioFile->checkAndCreateFolder($customDir);                return $customDir;    }    protected function _toHtml() {        if (!Mage::getStoreConfigFlag('nutritioninfo/general/active')) {            return '';        }        return parent::_toHtml();    }}